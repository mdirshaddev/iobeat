name: '🧑‍💻 Code Quality ⛑️ Build 🧪 Test ☁️ Deploy'

on: [push, pull_request]

jobs:
  code-quality:
    name: '🧑‍💻 Code Quality'
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: '☁️ Checkout repository'
        uses: actions/checkout@v3

      # Initializes the CodeQL tools for scanning.
      - name: '📜 Initialize CodeQL'
        uses: github/codeql-action/init@v2
        with:
          languages: 'typescript'

      # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: '⛑️ Autobuild'
        uses: github/codeql-action/autobuild@v2

      - name: '🧑‍🏭 Perform CodeQL Analysis'
        uses: github/codeql-action/analyze@v2

  build:
    needs: [code-quality]
    name: '⛑️ Build The Web Application'
    runs-on: ubuntu-latest

    steps:
      - name: '☁️ Checkout Repository'
        uses: actions/checkout@v2

      - name: '🔧 Setup Node.js'
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.1

      - name: '🔧 Install Yarn Globally'
        run: npm i -g yarn@latest

      - name: '📦 Install Dependencies'
        run: yarn install --frozen-lockfile

      - name: '🔍 Check Lint and Types'
        run: |
          yarn check-lint
          yarn check-types

      - name: '⛑️ Build the Web Application'
        run: |
          export SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }} && yarn build

      - name: '♻️ Upload Artifacts'
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: .next

  # single job that generates and outputs a common id
  prepare:
    name: '🔧 Prepare UUID for Cypress Testing'
    needs: [build]
    runs-on: ubuntu-latest
    outputs:
      uuid: ${{ steps.uuid.outputs.value }}

    steps:
      - name: Generate unique ID 💎
        id: uuid
        # take the current commit + timestamp together
        # the typical value would be something like
        # "sha-5d3fe...35d3-time-1620841214"
        run: echo "::set-output name=value::sha-$GITHUB_SHA-time-$(date +"%s")"
  cypress-test:
    name: '🧪 Cypress Testing'
    needs: [prepare]
    runs-on: ubuntu-latest

    steps:
      - name: '☁️ Checkout Repository'
        uses: actions/checkout@v2

      - name: '♻️ Download Artifacts'
        uses: actions/download-artifact@v3
        with:
          name: build
          path: .next

      - name: '☁️ Cypress End to End Testing'
        id: cypress
        # Continue the build in case of an error, as we need to set the
        # commit status in the next step, both in case of success and failure
        continue-on-error: true
        uses: cypress-io/github-action@v4
        with:
          install: true
          # Specify Browser since container image is compile with Firefox
          headed: false
          browser: electron
          start: yarn start
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 60
          ci-build-id: ${{ needs.prepare.outputs.uuid }}
          group: 'Iobeat End to End Testing'
          tag: node-16.15.1
          record: true
          parallel: false
          config-file: cypress.config.ts
        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEBUG: 'cypress:*'

      - name: '📜 Print Cypress Dashboard URL'
        run: |
          echo Cypress finished with: ${{ steps.cypress.outcome }}
          echo See results at ${{ steps.cypress.outputs.dashboardUrl }}

  chromatic-deployment:
    name: '☁️ Chromatic Publish of Stories'
    needs: [cypress-test]
    runs-on: ubuntu-latest

    steps:
      - name: '☁️ Checkout Repository'
        uses: actions/checkout@v2

      - name: '🔍 Verify Changed files'
        uses: tj-actions/verify-changed-files@v10
        id: verify-changed-files
        with:
          files: |
            ./src/**/*.stories.tsx

      - name: '☁️ Publish to Chromatic'
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        uses: chromaui/action@v1
        # Chromatic GitHub Action options
        with:
          # 👇 Chromatic projectToken, refer to the manage page to obtain it.
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
